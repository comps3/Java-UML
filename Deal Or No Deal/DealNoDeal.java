/* Title: DealNoDeal.java
 * Abstract: This programs allows users to play the well-known game
 * Deal or No Deal.  A user will start by picking one case in the 
 * beginning. Afterwards, users will be able select three, two, then one case 
 * until the user decides to accept the banks offer. Bank offer is generated by
 * taking the average of the total amount from the hidden cases.  
 */

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
public class DealNoDeal {

	public static void main(String[] args) {
		int i = 0;
		boolean k = false;
		int choice = 0;
		int usersCaseNum = 0;
		int deleted = 0;
		double usersCaseVal = 0;
		int turns = 3;
		double final_total = 0.0;
		double totalAvg = 0.0;
		boolean finishGame = false;
		
		double [] default_cases = {0.01, 1.00, 5.00, 10.00, 25.00, 50.00, 100.00, 200.00,
				500.00, 1000.00};
		ArrayList<Double> cases = new ArrayList<Double>();
		ArrayList<Integer>theChoosenCases = new ArrayList<Integer>();
		Scanner hiUser = new Scanner(System.in);
	
		for(int m = 0; m < 10; m++) {
			cases.add(default_cases[m]);
			theChoosenCases.add(m + 1);
		}
		
		Collections.shuffle(cases);
		System.out.println("========== Welcome to Deal or No Deal Game ==========");
		System.out.print("Hidden Cases: ");
		
		System.out.println();
		
		for(int m = 0; m < 10; m++)
		{
			if(m == 0)
			{
				System.out.print(theChoosenCases.get(m));
			}
			else {
				System.out.print(", " + theChoosenCases.get(m));
			}
		}
		
		System.out.println();
		System.out.print("Hi Player! Pick your cases: ");
	
		usersCaseNum = hiUser.nextInt() - 1;
		usersCaseVal = cases.get(usersCaseNum);
		theChoosenCases.set(usersCaseNum, 0);
	
	while(finishGame != true)
	{
		System.out.print("Hidden cases: ");
		

		k = false;
		
		for(int m = 0; m < 10; m++)
		{
			if(k == false && theChoosenCases.get(m) != 0)
			{
				System.out.print(theChoosenCases.get(m));
				k = true;
			}
			else if (theChoosenCases.get(m) != 0) {
				System.out.print(", " + theChoosenCases.get(m));
			}

		}
		
		System.out.println();
		i = 0;
		
		for(int m = 0; m < turns; m++)
		{
			System.out.print("Pick a case: ");
			choice = hiUser.nextInt() - 1;
			
			if(choice == usersCaseNum) {
				continue;
			}
			System.out.printf("Amount: $%.2f", cases.get(choice));
			cases.set(choice, 0.0);
			theChoosenCases.set(choice, 0);
			System.out.println();
			deleted++;
		}
		
		if(turns != 1) {
			turns--;
		}
		
		System.out.print("Hidden Amounts: ");
		 k = false;
		
	for(int j = 0; j < 10; j++) {
		
		for(Double eachCase: cases)
		{	
				if(k == false && default_cases[j] == eachCase && eachCase != 0.0)
				{
					System.out.printf("$%.2f", eachCase);
					k = true;
				}
				
				else if(default_cases[j] == eachCase && eachCase != 0.0) {
					System.out.printf(", $%.2f", eachCase);
				}
		}
	 }
	
		System.out.println();
		i = 0;
		
		for(Double eachCase: cases)
		{
			totalAvg += eachCase;
		}
		
		System.out.printf("Banker offer: $%.2f", (totalAvg / (cases.size() - deleted)));
		System.out.println();
		
		System.out.print("Deal (1) or No Deal (2): ");
		choice = hiUser.nextInt();
		System.out.println();
		
		if(choice == 1) {
			
			System.out.printf("OK! Your amount is $%.2f", (totalAvg / (cases.size() - deleted)));
			System.out.println();
			System.out.printf("Note that your original case number " + (usersCaseNum + 1) + " has $%.2f", usersCaseVal);
			
			if (totalAvg / (cases.size() - deleted) < usersCaseVal)
			{
				System.out.println("Thus, this is a bad deal.");
			}
			else {
				System.out.println("Thus, this is a good deal.");
			}
			
			finishGame = true;
		}
		
		if(cases.size() - deleted == 2)
		{
			System.out.println("OK! Since we have only one hidden case left, let's open your "
					+ "original case.");
			System.out.printf("Your amount is $%.2f", usersCaseVal);
			System.out.println();
			
			i = 0;
			
			for(Double eachCase: cases)
			{
				if(eachCase > 0 && eachCase != usersCaseVal)
				{
					final_total = eachCase; 
					break;
				}
				i++;
			}
			
			System.out.printf("Note that the case number " + (i + 1) + " has $%.2f", final_total);
			System.out.println();
			
			if ((totalAvg / (cases.size() - deleted)) > usersCaseVal)
			{
				System.out.println("Thus, this is a bad deal.");
				System.out.println();
			}
			else {
				System.out.println("Thus, this is a good deal.");
				System.out.println();
			}
			finishGame = true;
		}
		
		totalAvg = 0;
	
	   }
	
		System.out.println("========== Bye now. Thank you! ==========");
	}	
  }